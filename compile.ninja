defines = -DNDEBUG
#defines = 

gubg_include_paths  = -I gubg.algo/src -I gubg.io/src -I gubg.math/src -I gubg.std/src
cook_include_paths  = -I lib/src $gubg_include_paths
chai_include_paths  = -I gubg.chaiscript/extern/ChaiScript/include
catch_include_paths = -I gubg.std/extern/catch/single_include

build .bcook/gubg.io/src/gubg/OptionParser.cpp.obj: compile gubg.io/src/gubg/OptionParser.cpp
    include_paths = $gubg_include_paths
build .bcook/gubg.io/src/gubg/Strange.cpp.obj: compile gubg.io/src/gubg/Strange.cpp
    include_paths = $gubg_include_paths

build .bcook/lib/src/cook/model/Recipe.cpp.obj: compile lib/src/cook/model/Recipe.cpp
    include_paths = $cook_include_paths
build .bcook/lib/src/cook/model/Book.cpp.obj: compile lib/src/cook/model/Book.cpp
    include_paths = $cook_include_paths
build .bcook/lib/src/cook/model/Uri.cpp.obj: compile lib/src/cook/model/Uri.cpp
    include_paths = $cook_include_paths
build .bcook/lib/src/cook/model/Snapshot.cpp.obj: compile lib/src/cook/model/Snapshot.cpp
    include_paths = $cook_include_paths

build .bcook/gubg.std/src/catch_runner.cpp.obj: compile gubg.std/src/catch_runner.cpp
    include_paths = $catch_include_paths
build .bcook/lib/test/src/cook/Result_tests.cpp.obj: compile lib/test/src/cook/Result_tests.cpp
    include_paths = $cook_include_paths $catch_include_paths
build .bcook/lib/test/src/cook/model/Uri_tests.cpp.obj: compile lib/test/src/cook/model/Uri_tests.cpp
    include_paths = $cook_include_paths $catch_include_paths
build .bcook/lib/test/src/cook/model/PropertyCollection_tests.cpp.obj: compile lib/test/src/cook/model/PropertyCollection_tests.cpp
    include_paths = $cook_include_paths $catch_include_paths

build libgubg.a: archive $
    .bcook/gubg.io/src/gubg/OptionParser.cpp.obj $
    .bcook/gubg.io/src/gubg/Strange.cpp.obj $

build libbcook.a: archive $
    .bcook/lib/src/cook/model/Recipe.cpp.obj $
    .bcook/lib/src/cook/model/Book.cpp.obj $
    .bcook/lib/src/cook/model/Uri.cpp.obj $
    .bcook/lib/src/cook/model/Snapshot.cpp.obj $

build unit_tests.exe: link $
    .bcook/gubg.std/src/catch_runner.cpp.obj $
    .bcook/lib/test/src/cook/Result_tests.cpp.obj $
    .bcook/lib/test/src/cook/model/Uri_tests.cpp.obj $
    .bcook/lib/test/src/cook/model/PropertyCollection_tests.cpp.obj $
    | libbcook.a libgubg.a
    library_paths =  -L./
    user_libs = -lbcook -lgubg
