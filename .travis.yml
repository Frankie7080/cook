env:
  global:
  - secure: bgI88vE73t3OWBASMcIeiRyXZ6NuALmsfLXXj9uX0ynsU2f6JIzJzeNZx6tCytvJWw+l8075uvW3n45sAWqgpeFEZX3OR2TweLD1Sh4Aw0bHYe2NLSoPPNclajLl7SmAG6kGt0Ne0ujDD+KzRTR3JDZmq63JuElg5uWrVxtu7K5NopRBSu06GOIxBWMya03hyMGpDHt5xLAPQ80+HAXa80ACoIH574nRm0gJ+/GhssNtb0Dsx+yUL4Q8qpsDIoaukTVULP9gP3qAexZC0icjLwGPjgTeRJRerxocbvX3xynwiTTnDVT91oXUk5lsmqN4ZhfwIpoP+TH3PWrdzfYZy1TtksZ3uLH1iKdEU2ZYcVNjowplsExgkX1Em/5hh8EOG0H1uDj8FaqDvZ5pq4WevM7Y3ndbDucA+toI+ecb0bYh7Mmnvr+So8Qmp7Ln40mZtZG/rvRrYhYaWy/haHGXhWy/hmd7U3KikE7MRog8GiCQ9oruiI/0KwhEq/jmzG0qiIsyqO4Vct02RUeaGeBcTTjhiT07RJDhwV12u9I6B+dCoUXx0Z+taPA0KYyUdJ65331pRMClgim1q3vAwzqYZYtHHt+SKg/cCS4+I5TvEwx+CEpxELt1EsV2N+l78YEsV9IrQ+GQ1fJL2B10Ltj7PQPQgYwsxoIl1uj3jjFyb94=
  - secure: It/i9Mei+/vGcuVsDH2RI0vkyVbEC8cgv3oX4whz0DwK7jXbviJOFZTpzv0EdHBU6lrczCm3UEKTfZYEUGavw+qRMfWpNtis412qpd0HNfpXrJIv5wgjq0TIxF153K+jfeGDjYmRR5dbDGv/AhqFKgwI9585/+AX3Mg1QA2f28u+uP0HGMLG8ALrKFxZXxvwqSnBpJw1/Cnf2PX0dVleU0OMVbWdQLqSgN9ax/zY9uDJQO+3TBtXJbtCAJX66uC1JIAcLQkbbBEMe5ybsHcTUMW5Ych9CKrQ873qUTgyAHBRlTHnLw+QyB2U0TFmLo35b8+JSfvzPQ9whraAA+Q9upQQMn6wPALgmlVqukE7RqkdX9pDFzSRh7pFuiWHYxNxHmzuw860NzuTEvmRNeqIxhYuXHMpY6TXe8kMwh++iDh5anJLhkoTUXhARKwkGI5BNYFpqp7Rc/vZ12KQpkBi89y0RF+UuIn+mBa2GUUEoUxNkO3wZLr4Wfx40HWRHMhzYLcojm6P4j5gaQA0LKvplT9dLvIN8QIuu90+U0YvbURpsGMi+VP96M32GDLGw31Od27ciFXvcVUMz3X2h7ke9gcq0spald04oHOMKuOTH7U+LmFcu9juwapnAsdT++6ugzM/HT3F24x512RhxTnz5O4KrW1rWR60IIwhyMPX9AU=
  - secure: pkKP8CKjDQDN1QgMBqX7nFWUlaQeyNVNVU8DsymgOQIc85tU9dbiqRSip4Vz2YTe2irL4B5uLjVnmf5TqJT91An03/oOqLWLEWiPNE3/dRGg3pBPy6UDaDfYIpSmce6Js2W0BiFuakyQgccLmapetlSx+f5zDFTDPixXVhSy1Hh2IUzuF7P9c97QQsxQPADdUck8KNtNtC4re192xKdzex5HMC+EDBkcPfZGDNfLIzkGYV/tt5ar+7MsigFpC2KaJpT1xtiVQxfL3M2QByMd5apG22mEcLERw3rW2r2qxLt48ZClv4BZpl3J2PrEe8rxB1XYIA3jR0RexHhO08eubUHqRnKyHk/H6GwjMUCZER/fDhz6rnSOzt53gH/waYMhwqXgF7RHtQ5E0PlErshr96dV/XEoM7NqYf3tgwYAfThCZv/+CPU3wpYEG02p4Q9PuAaX/mY9x5xvJCl6YX/UVJRaReztSILeSb4LVcl4pxiW44gnf4lMQXMjMWSj/Vl+I7iiLFNbV0qXQrME7bnmSSfbguYUF26Y4VUvyyWqjMZO3rN52a1SULoIccUvv/cLGzttSHalwpv4RTdnV0PoqQSe48/NQ13cH9ZC0uqbNNxGPPW8+lU8C9ZlQIFPvjabZI8kYtPpXJoV1S5q55cuAcaAdpzos6vhV7NCUGpusoI=
  - secure: kyEzBxPppXdAyYEnoyj/nOCnCaf7osY9WZ/Rr1zvbHrrxgEJ2L7LUqOGSbueizfH3MJQU0Qo29EoVgxvlvWENBdSdYxSzQL2oqyphRoWLBjxdHp8N4JEZBeIn9X8zTnGee8ydXYupOapwlNecNiYi4ESDkCmMJqp++4HA4x7oZUcIyHdaq8jaFRNg/GkeVv4e3C3KQ9wFKJRei9K7fMLkpHYFg2IPWukNLYx/+HM3TpkiRVNLgRc0Td8cSn75HDvs/Jhn9YAO7CiqvonYVDarQ/jOIXkPC4VaiAHHSUUw133LuxEo8EaV7MHyaBzEUAy9uqmfiuFNLZgkHAtnN17Gx0FoM6bhw72VN5QvTVGqhJkUmgetgjGEdYkiWtao6feMNgLmwT7ia+79BXClRFTWc1pGajI640cXXfEnZE2sQwd5Pa4IpKaFtzMl46Vewm6dFAAF+uRTn7weg/sw7P9iZx5Op9EnWtDn4bwVNz1xHQRUC8Bs8uuSXYNS3Ky/7rUjLWFUU6PSvjUZ+sf4dOqAMw4gPAlTYknTHBzGynFSIndhH1sn7h55J4RQ+ULA9SZBjjzcMTrnyMo4mqvSKvwsEL7kw0szlARw+B9M45Z5PQ+trl/ImlCPD7jGDLAfJDa9vALB9xGCWB2h/oh7nfw+HBxvmsGioQRfLL8cIjCte8=
git:
  submodules: false

os:
  - linux
  - osx

sudo: required
language: ruby

services:
  - docker

addons:
  apt:
    packages:
    - sshpass

script:
  # linux build steps
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then docker build -t decode-it/cook .; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then docker run --name cook decode-it/cook; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then docker cp cook:/usr/bin/cook ./; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then tar cvzf cook.linux.latest.tar.gz cook; fi

  # macosx build steps
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install ninja ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install --with-clang llvm ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export PATH=/usr/local/opt/llvm/bin:$PATH ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then rake build ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then rake test ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cp cook.exe cook ; fi

  # non-os specific steps 
  - tar cvzf cook.${TRAVIS_OS_NAME}.latest.tar.gz cook; fi

before_deploy:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then docker tag decode-it/cook thomasfannes/cook:latest; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then docker push thomasfannes/cook:latest; fi

deploy:
    on:
        branch: master
    skip_cleanup: true
    provider: script
    script:
      - export SSHPASS=$DEPLOY_PASS
      - sshpass -e scp cook.${TRAVIS_OS_NAME}.latest.tar.gz $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
