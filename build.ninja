#File written by cook (1.0.0) on Mon Oct  9 08:00:33 2017

#>> Global variables
builddir = ./
compiler = g++ -std=c++17
linker = g++ -std=c++17
archiver = ar rcs
cflags =  -DNDEBUG
lflags =  -DNDEBUG
#<< Global variables

#>> Rule definitions
rule compile
  command = $compiler -c -MD -MF $out.d $cflags $defines -o $out $in $include_paths
  depfile = $out.d
rule link
  command = $linker $lflags -o $out $in $library_paths $libraries
rule archive
  command = $archiver $out $in
rule clean
  command = ninja -C $builddir -t clean
#<< Rule definitions

#>> Clean build statement
build clean: clean
#<< Clean build statement

#>> Recipes
defines =
include_paths = -I gubg.chaiscript/extern/ChaiScript/include -I gubg.io/src -I gubg.std/src -I src
#  >> Recipe "cook.exe"
#     target type: Executable
#     temporary files: ./.cook/cook/exe/release
#     result: "./cook.exe"
library_paths =
libraries = -ldl -lpthread -lstdc++fs
build ./.cook/cook/exe/release/gubg.io/src/gubg/OptionParser.cpp.obj: compile gubg.io/src/gubg/OptionParser.cpp
build ./.cook/cook/exe/release/gubg.io/src/gubg/Strange.cpp.obj: compile gubg.io/src/gubg/Strange.cpp
build ./.cook/cook/exe/release/gubg.io/src/gubg/bitmagic/bitmagic.cpp.obj: compile gubg.io/src/gubg/bitmagic/bitmagic.cpp
build ./.cook/cook/exe/release/gubg.io/src/gubg/file/Descriptor.cpp.obj: compile gubg.io/src/gubg/file/Descriptor.cpp
build ./.cook/cook/exe/release/gubg.io/src/gubg/file/File.cpp.obj: compile gubg.io/src/gubg/file/File.cpp
build ./.cook/cook/exe/release/gubg.io/src/gubg/file/Filesystem.cpp.obj: compile gubg.io/src/gubg/file/Filesystem.cpp
build ./.cook/cook/exe/release/gubg.io/src/gubg/file/Forest.cpp.obj: compile gubg.io/src/gubg/file/Forest.cpp
build ./.cook/cook/exe/release/gubg.io/src/gubg/hash/MD5.cpp.obj: compile gubg.io/src/gubg/hash/MD5.cpp
build ./.cook/cook/exe/release/gubg.io/src/gubg/parse/basic.cpp.obj: compile gubg.io/src/gubg/parse/basic.cpp
build ./.cook/cook/exe/release/gubg.io/src/gubg/parse/xml/Coding.cpp.obj: compile gubg.io/src/gubg/parse/xml/Coding.cpp
build ./.cook/cook/exe/release/src/cook/chai/Details.cpp.obj: compile src/cook/chai/Details.cpp
build ./.cook/cook/exe/release/src/cook/chai/Engine.cpp.obj: compile src/cook/chai/Engine.cpp
build ./.cook/cook/exe/release/src/cook/chai/Loader.cpp.obj: compile src/cook/chai/Loader.cpp
build ./.cook/cook/exe/release/src/cook/structure/Book.cpp.obj: compile src/cook/structure/Book.cpp
build ./.cook/cook/exe/release/src/cook/structure/Recipe.cpp.obj: compile src/cook/structure/Recipe.cpp
build ./.cook/cook/exe/release/src/cook/structure/Tag.cpp.obj: compile src/cook/structure/Tag.cpp
build ./.cook/cook/exe/release/src/cook/structure/Uri.cpp.obj: compile src/cook/structure/Uri.cpp
build ./.cook/cook/exe/release/src/cook/work/DependencyResolver.cpp.obj: compile src/cook/work/DependencyResolver.cpp
build ./.cook/cook/exe/release/src/cook/work/NinjaWriter.cpp.obj: compile src/cook/work/NinjaWriter.cpp
build ./.cook/cook/exe/release/src/cook/work/TopologicalOrder.cpp.obj: compile src/cook/work/TopologicalOrder.cpp
build ./.cook/cook/exe/release/src/cook/work/TreeWriter.cpp.obj: compile src/cook/work/TreeWriter.cpp
build ./.cook/cook/exe/release/src/main.cpp.obj: compile src/main.cpp
build ./cook.exe:  link $
    ./.cook/cook/exe/release/gubg.io/src/gubg/OptionParser.cpp.obj $
    ./.cook/cook/exe/release/gubg.io/src/gubg/Strange.cpp.obj $
    ./.cook/cook/exe/release/gubg.io/src/gubg/bitmagic/bitmagic.cpp.obj $
    ./.cook/cook/exe/release/gubg.io/src/gubg/file/Descriptor.cpp.obj $
    ./.cook/cook/exe/release/gubg.io/src/gubg/file/File.cpp.obj $
    ./.cook/cook/exe/release/gubg.io/src/gubg/file/Filesystem.cpp.obj $
    ./.cook/cook/exe/release/gubg.io/src/gubg/file/Forest.cpp.obj $
    ./.cook/cook/exe/release/gubg.io/src/gubg/hash/MD5.cpp.obj $
    ./.cook/cook/exe/release/gubg.io/src/gubg/parse/basic.cpp.obj $
    ./.cook/cook/exe/release/gubg.io/src/gubg/parse/xml/Coding.cpp.obj $
    ./.cook/cook/exe/release/src/cook/chai/Details.cpp.obj $
    ./.cook/cook/exe/release/src/cook/chai/Engine.cpp.obj $
    ./.cook/cook/exe/release/src/cook/chai/Loader.cpp.obj $
    ./.cook/cook/exe/release/src/cook/structure/Book.cpp.obj $
    ./.cook/cook/exe/release/src/cook/structure/Recipe.cpp.obj $
    ./.cook/cook/exe/release/src/cook/structure/Tag.cpp.obj $
    ./.cook/cook/exe/release/src/cook/structure/Uri.cpp.obj $
    ./.cook/cook/exe/release/src/cook/work/DependencyResolver.cpp.obj $
    ./.cook/cook/exe/release/src/cook/work/NinjaWriter.cpp.obj $
    ./.cook/cook/exe/release/src/cook/work/TopologicalOrder.cpp.obj $
    ./.cook/cook/exe/release/src/cook/work/TreeWriter.cpp.obj $
    ./.cook/cook/exe/release/src/main.cpp.obj
build recipe_cook.exe: phony ./cook.exe


#  << Recipe "cook.exe"

#<< Recipes

#>> Default build statement
default recipe_cook.exe
#<< Default build statement

