compiler = g++ -std=c++17
linker = g++ -std=c++17
delete = rm -f

cflags = -m32
defines = -DNDEBUG
include_paths = -I ".gubg/extern/ChaiScript/include" -I "gubg.io/src" -I "gubg.std/src" -I "src"
lflags = -m32
library_paths =
libraries = -ldl -lpthread -lstdc++fs
rule compile
  command = $compiler -c -MD -MF $out.d $cflags $defines -o $out $in $include_paths
  depfile = $out.d
rule link
  command = $linker $lflags -o $out $in $library_paths $libraries

build .cook/cook#exe/x32/release/gubg.io/src/gubg/OptionParser.cpp.obj: compile gubg.io/src/gubg/OptionParser.cpp
build .cook/cook#exe/x32/release/gubg.io/src/gubg/Strange.cpp.obj: compile gubg.io/src/gubg/Strange.cpp
build .cook/cook#exe/x32/release/gubg.io/src/gubg/bitmagic/bitmagic.cpp.obj: compile gubg.io/src/gubg/bitmagic/bitmagic.cpp
build .cook/cook#exe/x32/release/gubg.io/src/gubg/file/Descriptor.cpp.obj: compile gubg.io/src/gubg/file/Descriptor.cpp
build .cook/cook#exe/x32/release/gubg.io/src/gubg/file/File.cpp.obj: compile gubg.io/src/gubg/file/File.cpp
build .cook/cook#exe/x32/release/gubg.io/src/gubg/file/Filesystem.cpp.obj: compile gubg.io/src/gubg/file/Filesystem.cpp
build .cook/cook#exe/x32/release/gubg.io/src/gubg/file/Forest.cpp.obj: compile gubg.io/src/gubg/file/Forest.cpp
build .cook/cook#exe/x32/release/gubg.io/src/gubg/hash/MD5.cpp.obj: compile gubg.io/src/gubg/hash/MD5.cpp
build .cook/cook#exe/x32/release/gubg.io/src/gubg/parse/basic.cpp.obj: compile gubg.io/src/gubg/parse/basic.cpp
build .cook/cook#exe/x32/release/gubg.io/src/gubg/parse/xml/Coding.cpp.obj: compile gubg.io/src/gubg/parse/xml/Coding.cpp
build .cook/cook#exe/x32/release/src/cook/chai/Engine.cpp.obj: compile src/cook/chai/Engine.cpp
build .cook/cook#exe/x32/release/src/cook/recipe/Loader.cpp.obj: compile src/cook/recipe/Loader.cpp
build .cook/cook#exe/x32/release/src/main.cpp.obj: compile src/main.cpp
build cook.exe: link $
    .cook/cook#exe/x32/release/gubg.io/src/gubg/OptionParser.cpp.obj $
    .cook/cook#exe/x32/release/gubg.io/src/gubg/Strange.cpp.obj $
    .cook/cook#exe/x32/release/gubg.io/src/gubg/bitmagic/bitmagic.cpp.obj $
    .cook/cook#exe/x32/release/gubg.io/src/gubg/file/Descriptor.cpp.obj $
    .cook/cook#exe/x32/release/gubg.io/src/gubg/file/File.cpp.obj $
    .cook/cook#exe/x32/release/gubg.io/src/gubg/file/Filesystem.cpp.obj $
    .cook/cook#exe/x32/release/gubg.io/src/gubg/file/Forest.cpp.obj $
    .cook/cook#exe/x32/release/gubg.io/src/gubg/hash/MD5.cpp.obj $
    .cook/cook#exe/x32/release/gubg.io/src/gubg/parse/basic.cpp.obj $
    .cook/cook#exe/x32/release/gubg.io/src/gubg/parse/xml/Coding.cpp.obj $
    .cook/cook#exe/x32/release/src/cook/chai/Engine.cpp.obj $
    .cook/cook#exe/x32/release/src/cook/recipe/Loader.cpp.obj $
    .cook/cook#exe/x32/release/src/main.cpp.obj

rule clean
  command = ninja -t clean
build clean: clean
default cook.exe
